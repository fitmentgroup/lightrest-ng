!function(){"use strict";angular.module("lightrest",[]),angular.module("lightrest").factory("lightrest",["$http","$q",function(r,t){function e(r){return JSON.parse(JSON.stringify(r))}function n(r,t){if("[object Object]"!==Object.prototype.toString.call(r))throw new Error("config should be an object if anything");if(!r.url)throw new Error("Tried to create a request without url")}function u(u,a){function o(t){return t.url=t.url.replace(/:(\w+)/g,function(r,e){t.data||(t.data={});var n=t.data[e],u=new Error("Url parameter "+e+" was not included in the data");if(null==n)throw u;if(n=n.toString(),!n)throw u;return n}),a.dataField&&(t.data=t.data[a.dataField]),{run:function(){return r(t)}}}return a||(a={}),u=u?e(u):{},n(u,a),0!=a.urlApiPrepend&&("/"!=u.url[0]&&(u.url="/"+u.url),0!=u.url.indexOf("/api")&&(u.url="/api"+u.url)),function(r){if(u.data=r,a.array){for(var n=[],l=u.data.length,i=0;l>i;i++){var d=e(u);d.data=u.data[i],n.push(o(d))}if("concurrent"==a.array){for(var i=0;l>i;i++)n[i]=n[i].run();return t.all(n)}if("sequential"==a.array){var l=n.length,i=-1,c=function(){return i++,i>=l?!0:n[i].run().then(c,c)};return c()}throw new Error("array option should be one of these: concurrent sequential")}return o(u).run()}}var a={build:u,create:function(r){"/"!=r[0]&&(r="/"+r);var t=r,e="/:Id";return{get:u({url:t+e}),getAll:u({url:t}),post:u({method:"post",url:t}),"delete":u({method:"delete",url:t+e}),deleteMany:u({method:"delete",url:t+e},{array:"concurrent"}),put:u({method:"put",url:t+e}),putMany:u({method:"put",url:t+e},{array:"concurrent"})}}};return a}])}();