/* lightrest-ng 0.2.2 */

!function(){"use strict";angular.module("lightrest",[]),angular.module("lightrest").factory("lightrest",["$http","$q",function(r,e){function a(r){return JSON.parse(JSON.stringify(r))}function t(r,e){if(void 0===e.urlApiPrepend)e.urlApiPrepend=!0;else if(e.urlApiPrepend===!0);else if(e.urlApiPrepend!==!1)throw new Error("urlApiPrepend option can only be one of these: undefined true false");if(void 0===e.arrayMode);else if("concurrent"==e.arrayMode);else if("sequential"!=e.arrayMode)throw new Error("array option should be one of these: concurrent sequential");if(void 0===e.dataMode)r.method&&"get"!=r.method.toLowerCase()?e.dataMode="data":e.dataMode=!1;else if("data"===e.dataMode);else if("params"===e.dataMode);else if(e.dataMode!==!1)throw new Error("dataMode option can only be one of these: undefined 'data' 'params'")}function n(n,o){function d(e){var t=a(n);return t.url=t.url.replace(/:(\w+)/g,function(r,a){var t=new Error("Url parameter "+a+" was not included in the data");if(!e)throw t;var n=e[a];if(null==n)throw t;if(n=n.toString(),!n)throw t;return n}),o.dataField&&(e=e[o.dataField]),"data"==o.dataMode?t.data=e:"params"==o.dataMode?t.params=e:o.dataMode===!1,{run:function(){return r(t)}}}return n=n?a(n):{},o||(o={}),t(n,o),o.urlApiPrepend&&("/"!=n.url[0]&&(n.url="/"+n.url),0!=n.url.indexOf("/api")&&(n.url="/api"+n.url)),function(r){if(!o.arrayMode)return d(r).run();for(var a=[],t=r.length,n=0;t>n;n++)a.push(d(r[n]));if("concurrent"==o.arrayMode){for(var n=0;t>n;n++)a[n]=a[n].run();return e.all(a)}if("sequential"==o.arrayMode){var t=a.length,n=-1,i=function(){return n++,n>=t?!0:a[n].run().then(i,i)};return i()}}}var o={build:n};return o}])}();