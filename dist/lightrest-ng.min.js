/* lightrest-ng 0.2.3 */

!function(){"use strict";angular.module("lightrest",[]),angular.module("lightrest").factory("lightrest",["$http","$q",function(r,e){function n(r){return JSON.parse(JSON.stringify(r))}function t(r,e){if(void 0===e.urlApiPrepend)e.urlApiPrepend=!0;else if(e.urlApiPrepend===!0);else if(e.urlApiPrepend!==!1)throw new Error("urlApiPrepend option can only be one of these: undefined true false");if(void 0===e.arrayMode);else if("concurrent"==e.arrayMode);else if("sequential"!=e.arrayMode)throw new Error("array option should be one of these: concurrent sequential")}function u(u,o){function i(e){e||(e={});var t=n(u),o=e.urlParams;if(t.url=t.url.replace(/:(\w+)/g,function(r,e){var n=new Error("Url parameter "+e+" was not included in the data");if(!o)throw n;var t=o[e];if(null==t)throw n;if(t=t.toString(),!t)throw n;return t}),(!u.method||"get"==u.method.toLowerCase())&&void 0!==e.body)throw new Error("Can't send data in body for get requests");return t.data=e.body,t.query=e.query,{run:function(){return r(t)}}}return u=u?n(u):{},o||(o={}),t(u,o),o.urlApiPrepend&&("/"!=u.url[0]&&(u.url="/"+u.url),0!=u.url.indexOf("/api")&&(u.url="/api"+u.url)),function(r){if(!o.arrayMode)return i(r).run();for(var n=[],t=r.length,u=0;t>u;u++)n.push(i(r[u]));if("concurrent"==o.arrayMode){for(var u=0;t>u;u++)n[u]=n[u].run();return e.all(n)}if("sequential"==o.arrayMode){var t=n.length,u=-1,a=function(){return u++,u>=t?!0:n[u].run().then(a,a)};return a()}}}var o={build:u};return o}])}();