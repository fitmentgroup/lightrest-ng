/* lightrest-ng 0.2.4 */ !function(){"use strict";angular.module("lightrest",[]),angular.module("lightrest").factory("lightrest",["$http","$q",function(e,r){function n(e){return JSON.parse(JSON.stringify(e))}function o(e,r){for(var n=r.split(".");n.length&&(e=e[n.shift()]););return e}function t(e,r){if(void 0===r.urlApiPrepend)r.urlApiPrepend=!0;else if(r.urlApiPrepend===!0);else if(r.urlApiPrepend!==!1)throw new Error("urlApiPrepend option can only be one of these: undefined true false");if(void 0===r.arrayMode);else if("concurrent"==r.arrayMode);else if("sequential"!=r.arrayMode)throw new Error("arrayMode option should be one of these: undefined 'concurrent' 'sequential'");if(void 0===r.body)r.body=e.method&&"get"!=e.method.toLowerCase()?!0:!1;else if(r.body===!1);else if(r.body===!0);else if(!("string"==typeof r.body||r.body instanceof String))throw new Error("body option should be one of these: undefined true false ");if(void 0===r.query)r.query=e.method&&"get"!=e.method.toLowerCase()?!1:!0;else if(r.query===!1);else if(r.query===!0);else if(!("string"==typeof r.query||r.query instanceof String))throw new Error("query option should be one of these: undefined true false ");if(void 0===r.urlParams)r.urlParams=!0;else if(r.urlParams===!0);else if(r.urlParams!==!1)throw new Error("urlParams option can only be one of these: undefined true false")}function i(i,u){function a(r){r||(r={});var t=n(i);if(u.urlParams&&(t.url=t.url.replace(/:([\w.]+)/g,function(e,n){var t=new Error("Url parameter "+n+" was not included in the data");if(!r)throw t;var i=o(r,n);if(null==i)throw t;if(i=i.toString(),!i)throw t;return i})),u.body){var a="string"==typeof u.body||u.body instanceof String?o(r,u.body):r;t.data=a}if(u.baseUrl||(u.baseUrl="api"),"/"==t.url[0]&&(i.url=i.url.substr(1)),t.url=[u.baseUrl,i.url].join("/"),u.query&&void 0===r){var a="string"==typeof u.query||u.query instanceof String?o(r,u.query):r;t.url+="?"+decodeURIComponent($.param(a))}return{run:function(){return e(t)}}}return i||(i={}),u||(u={}),t(i,u),"/"==u.baseUrl.slice(-1)&&(u.baseUrl=u.baseUrl.slice(0,-1)),function(e){if(!u.arrayMode)return a(e).run();for(var n=[],o=e.length,t=0;o>t;t++)n.push(a(e[t]));if("concurrent"==u.arrayMode){for(var t=0;o>t;t++)n[t]=n[t].run();return r.all(n)}if("sequential"==u.arrayMode){var o=n.length,t=-1,i=function(){return t++,t>=o?!0:n[t].run().then(i,i)};return i()}}}var u={build:i};return u}])}();